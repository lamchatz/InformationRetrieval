package entities;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class InvertedIndex {
    private static final Set<String> COMMON_WORDS = Set.of("και", "τους", "αλλά", "άλλα", "τέτοιο", "τέτοια", "τέτοιον", "τέτοιους", "τον", "κύριε", "κυρία", "κύριος",
            "ενώ", "άρα", "μόλις", "επειδή", "αφού", "καθώς", "λοιπόν", "έτσι", "δηλαδή", "βασικά", "εγώ", "εσύ", "αυτός", "εμείς", "εσείς", "αυτοί", "έχω", "μέχρι", "σας", "μας",
            "μάλλον", "στο", "στα", "στη", "στην", "στον", "στους", "του", "των", "μην", "περίπου", "δεν", "μπορεί", "εννοείται", "κάνω", "κάποιο", "κάποια", "κάποιον",
            "τις", "τες", "της", "την", "ένας", "μία", "ένα", "ενός", "έναν", "μίας", "ότι", "φράση", "κυρίες", "κύριοι", "συνάδελφοι", "θα", "όπως", "κάτι", "τώρα", "έχει", "έχουμε", "έχεις",
            "διότι", "παρά", "ούτε", "είτε", "ακόμη", "που", "γιατί", "από", "μια", "για", "είναι", "εμένα", "εσένα", "εμάς", "εσάς", "αυτούς", "αυτόν", "αυτήν", "αυτή", "αυτό",
            "εαν", "εάν", "πως", "πώς", "μου", "σου", "κατά", "όμως", "είμαι", "είσαι", "είμαστε", "είσαστε", "ήσασταν",
            "ήμασταν", "πού", "έχετε", "είχα", "είχες", "είχε", "είχαμε", "είχατε", "είχαν", "έχουν", "ποιο", "ποιος", "ποιός", "ναι",
            "όχι", "όποιος", "όποια", "οποία", "οποίο", "οποίοι", "ετών", "επομένως", "γίνονται", "γίνονταν", "αριθμό", "γράψει", "μιλώ", "μιλάω",
            "συμβαίνει", "συμβαίνουν", "μιας", "είσασταν", "πήγαμε", "θέμα", "θέλω", "είμεθα", "γνωρίζετε", "εκάστοτε", "ίδια", "ίδιο", "ίδιος",
            "θέση", "οποίo", "τοσο", "αντί", "ευχαριστώ", "λόγο", "πολύ", "αυτά", "πρέπει", "δύο", "όλα", "εδώ",
            "νέα", "εκεί", "μόνο", "στις", "μετά", "ήταν", "κάνει", "προς", "όλοι", "γίνει", "είπε", "επίσης", "όπου", "άλλο",
            "αυτές", "επί", "έξι", "λέω", "πάρα", "όταν", "ώστε", "ακόμα", "κάθε", "όλες", "όλους", "ήδη", "μπορούν", "έγινε",
            "πει", "πλέον", "όσο", "ώρα", "πολλά", "πριν", "όλο", "λέμε", "πάλι", "πιο", "σαν", "τρεις", "βέβαια", "είπα",
            "όλη", "δυο", "πάει", "ποτέ", "τρία", "δώδεκα", "εντός", "λένε", "λέτε", "ξέρω", "πέντα", "ποιοι", "λέει", "αυτού",
            "οποίος", "υπάρχει", "λόγω", "μεταξύ", "παρακαλώ", "κανείς", "εξής", "ανακοινώσω", "εαυτό", "όλων", "έξω", "ήθελα",
            "ζωής", "πάνω", "κατ", "χώρας", "υπό", "πόσο", "δυνατό", "γίνουν", "ωστόσο", "άλλες", "σήμερα", "προ", "χθες", "εχθές",
            "τρίτο", "χωρίς", "βάσει", "δεύτερο", "περί", "αμέσως", "τέλος", "πάντως", "πρώτο", "δια",
            "αυτών", "δεύτερον", "πρώτον", "νομίζω", "πάρει", "καμία", "όσων", "όσον", "αφορά", "λίγο", "λίγες", "λίγη",
            "λίγα", "λίγων", "λίγους", "μέρες", "εκτός", "κάνουμε", "κάνουν", "κάνουνε", "κάνεις", "λόγους", "αυτής", "έβαλε",
            "πολλές", "συνεχώς", "φορές", "μιλάει", "μιλάμε", "μιλάτε", "μιλάνε", "νέας", "χώρις",
            "κυρίως", "παρόν", "οδηγούν", "άλλωστε", "απλή", "βάση", "παίρνουν", "κάποιες", "λάβει", "μιλάς", "μέσα", "ίδιοι",
            "υπάρχουν", "πρόκειται", "τότε", "ποιες", "άλλη", "μαζί", "ισχύει", "κιόλας",
            "εκείνο", "μέσο", "σαφές", "υπήρχαν", "νομίζουμε", "καν", "κανέναν", "κανένα", "κανένας",
            "κανενώς", "καιρός", "εξοχήν", "μέρους", "γενικά", "νέο", "επιτέλους", "ακούστε", "θέλατε",
            "πήρε", "πήρες", "πήραμε", "πήρατε", "πήραν", "πάω", "πας", "πάμε", "κάναμε", "είπαμε", "ερωτώ", "βεβαίως",
            "απέναντι", "τέταρτο", "αρέσει", "πολλοί", "ξανά", "μπορούσε", "σχετική", "χρόνο",
            "πιστεύω", "νέες", "εκείνες", "τρόπο", "λύση", "τόσο", "ίσως", "έκανε", "όσα", "φαίνεται",
            "ξέρετε", "πρόεδρε", "συνέχεια", "λέγεται", "χάριν", "καλά", "κακά", "πάρουμε",
            "λόγος", "αφήστε", "θέλετε", "νομίζεις", "νομίζει", "χρονιά", "χρόνια", "κάνετε",
            "έλεγα", "πέρα", "μπορώ", "φυσικά", "έπαιρνε", "ιδέα", "ειδικά", "ειδικό", "μόνος", "ξεχνάτε",
            "μπω", "είσθε", "μπουν", "σχεδόν", "εκείνους", "δηλώσει", "τελείως", "λείπει", "τίποτα", "παντός",
            "δώσω", "δώσεις", "δώσει", "δώσουμε", "δώσετε", "δώσουν", "ενώπιον", "υπήρχε",
            "δικά", "συμβεί", "τελικό", "έλεγε", "έλεγες", "τρόπος", "προσπάθεια", "συμφωνώ",
            "γίνεται", "αίθουσα", "κρίνει", "αρκεί", "μήπως", "γνωστό", "μένα", "καμιά", "δημοκρατίας",
            "πλειοψηφία", "σώμα", "χώρα", "αποτελεί", "συγκεκριμένα", "χώρες", "πράγματι", "στιγμή",
            "πολιτική", "νόμου", "οικονομικών", "πρώτη", "κατάσταση", "ποια", "περισσότερο", "σχέση",
            "φορά", "περίπτωση", "βουλής", "πρόβλημα", "δούμε"+ "υπουργέ", "υπουργός", "άρθρο", "μάλιστα",
            "διαδικασία", "δεκτό", "οποίες", "λεπτά", "θέματα", "ακριβώς", "συνεπώς", "μεγάλη", "έπρεπε", "πραγματικά",
            "πέντε", "μπορούμε", "δική", "συνάδελφε", "ευχαριστούμε", "τουλάχιστον", "μεγάλο", "είπατε", "πείτε", "κύριο", "δυστυχώς",
            "σχετικά", "ερωτάται", "χρειάζεσαι", "ιδίαιτερα", "θέλει", "σύμφωνα", "υπάρξει", "σημαίνει", "μήνες", "είστε", "έρχεται",
            "είκοσι", "ουσιαστικά", "ορίστε", "κάτω", "παράδειγμα", "χώρο", "καμμία", "τελικά", "δίνει", "μπορείτε", "πάντα", "άλλους",
            "κάνατε", "άλλοι", "μέσω", "δεύτερη", "γνώμη", "πράγμα", "πίσω", "δέιτε", "μπροστά", "ξέρουμε", "έως", "εώς", "προφανώς", "παραπάνω",
            "κάποιοι", "αύριο", "θεωρώ", "πόση", "υπήρξε", "θέλουν", "έρθει", "σωστά", "μεγάλες", "πενήντα", "μεγάλα", "επιπλέον",
            "επτά", "απολύτως", "απλά", "δικό", "προηγούμενη", "εφόσον", "καλό", "βλέπουμε", "οκτώ", "δοθεί", "πάνε", "τέτοιες", "καλύτερα", "τελειώνω",
            "όσοι", "εκείνη", "πότε", "άλλος", "σοβαρά", "τέσσερα", "τεράστια", "καθόλου", "τρίτη", "εκατόν", "καλή", "σωστή", "παράλληλα",
            "κυρίου", "δει", "πια", "κλπ", "τίποτε", "μόνη", "μπει", "βλέπω", "γενικής", "έδωσε", "μεν", "πάρουν", "θεωρούμε",
            "έκαναν", "άνω", "αλλιώς", "ποσό", "ξέρει", "πολλούς", "εις", "μιλήσω", "τόσα", "έρχομαι", "πρώην", "μπορέσουμε",
            "πάρετε", "δείχνει", "όσους", "τρίτον", "γνωρίζει", "παρ", "ούτως", "τεράστιο", "θυμίσω", "πλήρως", "ώρες", "προηγούμενο",
            "είπαν", "ανα", "ανά", "βάλει", "δίνουν", "μισό", "ελπίζω", "καλώς", "προχθές", "εκείνα", "μικρό", "τέτοιου", "εκατό",
            "βλέπετε", "έκανα", "ήμουν", "μερικά", "πρώτου", "αρχίσει", "αλλού", "κάποτε", "τριών", "μερικές", "οποίου", "μπορούσαμε",
            "διά", "ενδιαφέρει", "ποιον", "μπαίνει", "βρούμε", "πολλών", "κλείνω", "κοντά", "ωραία", "ανήκει", "είδαμε", "σίγουρα", "βγει",
            "άλλου", "σαφώς", "έφερε", "γινόταν", "εκείνοι", "βρει", "δώσατε", "ανέφερε", "ύστερα", "εννέα", "οπότε", "ζούμε", "ζητούν",
            "καταλάβει", "πλην", "είδα", "θυμάμαι", "λυπάμαι", "περισσότεροι", "νέος", "ήθελε", "οποίας", "εννοώ", "ζητάμε", "κλείνοντας",
            "σεις", "φέρετε", "ανηκούν", "βάζει", "εξάλλου", "πόσα", "μιλήσουμε", "ίδιες", "παντού", "εξαιτίας", "πήγε", "μπαίνουν", "πηγαίνει",
            "λόγου", "ακολουθεί", "βέβαιο", "ενιαίο", "έχοντας", "οχι", "τελική", "κακώς", "τυχόν", "πουν", "ακούμε", "αφήσουμε", "ικα", "συνήθως",
            "βρεθεί", "βγαίνει", "πέρασε", "εκείνος", "τούτο", "δικής", "θεωρεί", "κλείσω", "μόνον", "λύσει", "βρείτε", "λέγαμε", "ρωτήσω",
            "μπορούσα", "κάντε", "δισ", "άλλον", "ακούω", "δίπλα", "έγραψα", "ακούστηκε", "διαβάζω", "μένουν", "ίδιους", "φύγει", "αξίζει",
            "δώστε", "ετσι", "μεγάλος", "ζουν", "κοιτάξτε", "περνάει", "ζητάτε", "έλεγαν", "στηρίζεται", "συμφωνεί", "ομως", "λες", "όλης",
            "γενικός", "κει", "πήγαν", "συνεχιστεί", "όσες", "περιμένουν", "συχνά", "αρκετές", "πόσους", "άλλης", "άρχισε", "φτάνει", "καλές", "μακριά",
            "συν", "γενικές", "ενενήντα", "ξαφνικά", "ίδιου", "βρουν", "έδωσαν"
    );
    private static final String SPACE = " ";
    private static final String WHITESPACE = "\\s";
    private static final String REGEX = "[.!«¶»@#$%…^&*()_=+<>/?‘;'\",:\\[\\]\\t\\s-]";

    private final Map<String, Long> index;
    private final Collection<TF> tfScores;

    public InvertedIndex() {
        this.index = new HashMap<>();
        this.tfScores = new ArrayList<>();
    }

    public void indexSpeech(Speech speech) {
        int size = 0;
        for (String word : speech.getText().toLowerCase().replaceAll(REGEX, SPACE).split(WHITESPACE)) {
            if (!COMMON_WORDS.contains(word) && word.length() > 2 && containsOnlyLetters(word)) {
                index.merge(word,  1L, Long::sum);
                size++;
            }
        }

        speech.setSize(size);
        computeTFValues(speech);
    }

    private void computeTFValues(Speech speech) {
        TF tfOfSpeech = new TF(speech.getId(), speech.getSize());
        for (Map.Entry<String, Long> entry: index.entrySet()) {
            String word = entry.getKey();

            tfOfSpeech.calculate(word, index.get(word));
        }

        tfScores.add(tfOfSpeech);
        index.clear();
    }

    private boolean containsOnlyLetters(String word) {
        for (char c : word.toCharArray()) {
            if (!Character.isLetter(c)) {
                return false;
            }
        }
        return true;
    }

    public Collection<TF> getTfScores() {
        return tfScores;
    }

    public void print() {
        index.entrySet().forEach(System.out::println);
    }
}
